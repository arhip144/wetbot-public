const { EmbedBuilder, Collection } = require("discord.js")
module.exports = {
    name: 'ping',
    nameLocalizations: {
        'ru': '–ø–∏–Ω–≥',
        'uk': '–ø—ñ–Ω–≥',
        'es-ES': 'ping'
    },
    description: 'Technical information about bot',
    descriptionLocalizations: {
        'ru': '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ',
        'uk': '–¢–µ—Ö–Ω—ñ—á–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –±–æ—Ç–∞',
        'es-ES': 'Informaci√≥n t√©cnica sobre el bot'
    },
    dmPermission: true,
    group: `general-group`,
    cooldowns: new Collection(),
    /**
     *
     * @param {Client} client
     * @param {CommandInteraction} interaction
     * @param {String[]} args
     */
    run: async (client, interaction, args) => {
        await interaction.deferReply({ flags: ["Ephemeral"] })
        const embed = new EmbedBuilder()
            .setColor("#2F3236")
            .setTitle(client.user.username)
            .setThumbnail(client.user.avatarURL())
        await client.shard.broadcastEval(async(c, { guildId, locale }) => {
            return `\`${c.shard.ids[0]}\` ‚Äî ${c.ws.status === 0 ? `üü¢${c.language({ textId: "–û–Ω–ª–∞–π–Ω", guildId, locale })}` : c.ws.status === 1 ? `üåô${c.language({ textId: "–°–æ–µ–¥–∏–Ω—è–µ—Ç—Å—è", guildId, locale })}` : c.ws.status === 2 ? `üåô${c.language({ textId: "–ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è", guildId, locale })}` : c.ws.status === 3 ? `üåô${c.language({ textId: "–ü—Ä–æ—Å—Ç–∞–∏–≤–∞–µ—Ç", guildId, locale })}` : c.ws.status === 4 ? `üåô${c.language({ textId: "–ë–ª–∏–∑–∫–æ", guildId, locale })}` : c.ws.status === 5 ? `üî¥${c.language({ textId: "–û—Ç–∫–ª—é—á—ë–Ω", guildId, locale })}` : c.ws.status === 6 ? `üåô${c.language({ textId: "–û–∂–∏–¥–∞–µ—Ç —Å–µ—Ä–≤–µ—Ä—ã", guildId, locale })}` : c.ws.status === 7 ? `üåô${c.language({ textId: "–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è", guildId, locale })}` : `üåô${c.language({ textId: "–í–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ", guildId, locale })}`} ‚Ä¢ ${c.ws.ping || 0} ms`
        }, { context: { guildId: interaction.guildId, locale: interaction.locale } }).then(data => embed.setDescription(data.join("\n"))).catch(e => embed.setDescription(`${client.config.emojis.NO}${e.message}`))
        const statsEmbed = new EmbedBuilder()
            .setTitle(`${client.language({ textId: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥", guildId: interaction.guildId, locale: interaction.locale })}`)
            .setColor(3093046)
        const commandsUses = await client.commandsUsesSchema.find().sort({"alltime.uses": -1 })
        const alltimeUses = commandsUses.reduce((acc, command) => acc += command.alltime.uses, 0)
        const monthUses = commandsUses.reduce((acc, command) => acc += command.monthly.uses, 0)
        const weekUses = commandsUses.reduce((acc, command) => acc += command.weekly.uses, 0)
        const dayUses = commandsUses.reduce((acc, command) => acc += command.daily.uses, 0)
        const hourUses = commandsUses.reduce((acc, command) => acc += command.hourly.uses, 0)
        const prevMonthUses = commandsUses.reduce((acc, command) => acc += command.lastMonthUses, 0)
        const prevWeekUses = commandsUses.reduce((acc, command) => acc += command.lastWeekUses, 0)
        const prevDayUses = commandsUses.reduce((acc, command) => acc += command.lastDayUses, 0)
        const prevHourUses = commandsUses.reduce((acc, command) => acc += command.lastHourUses, 0)
        const TOP10 = commandsUses.slice(0, 10).map((command, index) => {
            return `${index + 1}. **${command.commandName}** (${command.alltime.uses})`
        })
        statsEmbed.addFields([
            { name: `${client.language({ textId: "–í—Å–µ –≤—Ä–µ–º—è", guildId: interaction.guildId, locale: interaction.locale })}`, value: alltimeUses.toString(), inline: true },
            { name: `${client.language({ textId: "–ú–µ—Å—è—Ü", guildId: interaction.guildId, locale: interaction.locale })}`, value: `${monthUses} ${monthUses < prevMonthUses && prevMonthUses !== 0 ? client.config.emojis.DOWN : monthUses > prevMonthUses && prevMonthUses !== 0 ? client.config.emojis.UP : ""}${prevMonthUses === 0 ? "" : `${Math.round(Math.abs((monthUses / prevMonthUses - 1) * 100))}%`}`, inline: true },
            { name: `${client.language({ textId: "–ù–µ–¥–µ–ª—è", guildId: interaction.guildId, locale: interaction.locale })}`, value: `${weekUses} ${weekUses < prevWeekUses && prevWeekUses !== 0 ? client.config.emojis.DOWN : weekUses > prevWeekUses && prevWeekUses !== 0 ? client.config.emojis.UP : ""}${prevWeekUses === 0 ? "" : `${Math.round(Math.abs((weekUses / prevWeekUses - 1) * 100))}%`}`, inline: true },
            { name: `${client.language({ textId: "–î–µ–Ω—å", guildId: interaction.guildId, locale: interaction.locale })}`, value: `${dayUses} ${dayUses < prevDayUses && prevDayUses !== 0 ? client.config.emojis.DOWN : dayUses > prevDayUses && prevDayUses !== 0 ? client.config.emojis.UP : ""}${prevDayUses === 0 ? "" : `${Math.round(Math.abs((dayUses / prevDayUses - 1) * 100))}%`}`, inline: true },
            { name: `${client.language({ textId: "1 —á–∞—Å", guildId: interaction.guildId, locale: interaction.locale })}`, value: `${hourUses} ${hourUses < prevHourUses && prevHourUses !== 0 ? client.config.emojis.DOWN : hourUses > prevHourUses && prevHourUses !== 0 ? client.config.emojis.UP : ""}${prevHourUses === 0 ? "" : `${Math.round(Math.abs((hourUses / prevHourUses - 1) * 100))}%`}`, inline: true },
            { name: `${client.language({ textId: "–¢–û–ü-10 –∫–æ–º–∞–Ω–¥", guildId: interaction.guildId, locale: interaction.locale })}`, value: TOP10.join("\n") }
        ])
        interaction.editReply({ embeds: [embed, statsEmbed] })
    }
}