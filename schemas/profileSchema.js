const { Schema, model, models } = require('mongoose')
const profileSchema = new Schema({
    userID: { type: String, require: true },
    guildID: { type: String, require: true },
    totalxp: { type: Number },
    seasonTotalXp: { type: Number },
    xp: { type: Number },
    seasonXp: { type: Number },
    xpSession: { type: Number },
    rpSession: { type: Number },
    level: { type: Number, default: 1 },
    seasonLevel: { type: Number, default: 1 },
    messages: { type: Number },
    hours: { type: Number },
    rp: { type: Number },
    hoursSession: { type: Number },
    likes: {type: Number },
    currency: { type: Number },
    currencySession: { type: Number },
    currencySpent: { type: Number },
    stats: { type: Object, default: undefined },
    itemsSession: { type: Array, default: undefined },
    invites: { type: Number },
    startTime: { type: Number },
    inviterInfo: { type: Object, default: undefined },
    bio: { type: String },
    birthday_day: { type: Number },
    birthday_month: { type: Number },
    birthday_year: { type: Number },
    image: { type: String },
    bumps: { type: Number },
    giveawaysCreated: { type: Number },
    multiplyXP: { type: Number },
    multiplyXPTime: { type: Date },
    multiplyCUR: { type: Number },
    multiplyCURTime: { type: Date },
    multiplyLuck: { type: Number},
    multiplyLuckTime: { type: Date },
    multiplyRP: { type: Number},
    multiplyRPTime: { type: Date },
    daysStreak: { type: Number, default: 1 },
    lastDaily: { type: Date },
    lastLike: { type: Date },
    fishing: { type: Number },
    mining: { type: Number },
    maxDaily: { type: Number },
    wormholeTouched: { type: Number },
    doneQuests: { type: Number },
    itemsSoldOnMarketPlace: { type: Number },
    inventory: [{
        itemID: { type: String },
        amount: { type: Number },
        fav: { type: Boolean },
    }],
    achievements: { type: Array, default: undefined },
    roles: { type: Array, default: undefined },
    quests: { type: Object, default: undefined },
    blockActivities: { type: Object, default: undefined },
    vk: { type: String },
    steam: { type: String },
    tiktok: { type: String },
    instagram: { type: String },
    isHiden: { type: Boolean },
    joinDateIsHiden: { type: Boolean },
    achievementsHiden: { type: Boolean },
    sex: { type: String },
    hideSex: { type: Boolean },
    marry: { type: String },
    marryDate: { type: Date },
    trophies: { type: Array, default: undefined },
    trophyHide: { type: Boolean },
    deleteFromDB: { type: Date },
    rank_card: { type: Object, default: undefined },
    itemsOpened: { type: Number },
    wormholesSpawned: { type: Number },
    itemsReceived: { type: Number },
    itemsCrafted: { type: Number },
    itemsUsed: { type: Number },
    itemsBoughtInShop: { type: Number },
    itemsBoughtOnMarket: { type: Number },
    itemsSold: { type: Number },
    roleIncomeCooldowns: { type: Map },
    dailyLimits: { type: Schema.Types.Mixed },
    weeklyLimits: { type: Schema.Types.Mixed },
    monthlyLimits: { type: Schema.Types.Mixed },
    dropdownCooldowns: { type: Map },
    levelMention: { type: Boolean },
    achievementMention: { type: Boolean },
    itemMention: { type: Boolean },
    roleIncomeMention: { type: Boolean },
    inviteJoinMention: { type: Boolean },
    inviteLeaveMention: { type: Boolean },
    jobsCooldowns: { type: Map },
    allJobsCooldown: { type: Date },
    itemsCooldowns: { type: Map },
    boosts: { type: Number },
    works: { type: Number },
    inventoryRoles: { type: Array, default: undefined },
    giveawayWins: { type: Number },
    socialLinksHidden: { type: Boolean },
    rolesHidden: { type: Boolean },
    bioHidden: { type: Boolean },
    bannerHidden: { type: Boolean },
    birthdateHidden: { type: Boolean },
    birthYearHidden: { type: Boolean },
    thumbnailHidden: { type: Boolean },
    thumbnail: { type: String },
    profileLikes: { type: Number },
    usersWhoLikes: { type: Array, default: undefined },
    promocodesUsed: { type: Number },
    autoIncomeExpire: { type: Date },
    settings_open_ephemeral: { type: Boolean },
    settings_open_always_maximum: { type: Boolean },
    settings_open_disallow_luck: { type: Boolean },
    settings_open_always_active: { type: Boolean },
}, { minimize: false })
profileSchema.index({ userID: 1, guildID: 1 }, { unique: true })
const name = "profiles"
module.exports = models[name] || model(name, profileSchema)